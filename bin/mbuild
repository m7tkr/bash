#!/usr/bin/env bash

# name: built
# desc: building static webpage using pandoc
# usage: `./mbuild` in webpage root dir
# author: m7tkr

# set directories
CURRENT_FOLDER=`pwd`

# check for docs/ folder existence
if [[ -z `grep docs <<< $CURRENT_FOLDER` ]]; then
  echo "mbuild: grep: no docs/ folder for the script to init"
  exit 1
fi

# check for notes/ folder existence
ROOT_DIR=${CURRENT_FOLDER%/docs*}
ROOT_DIR="${ROOT_DIR}/docs"

if [[ -z `find "$ROOT_DIR" -type d -iname notes` ]]; then
  echo "mbuild: grep: no notes/ folder for the script to init"
  exit 1
fi

if [[ -z "$1" ]]; then
  echo 'mbuild: usage: mbuild <script | lang>'
fi

if [[ "$1" = root ]]; then
  SEARCH_FOLDER="$ROOT_DIR -maxdepth 1"
  TEMPLATE="$ROOT_DIR/assets/root.html"
fi

if [[ "$1" = lang ]]; then
  if [[ -z "$1" ]]; then
    echo 'mbuild: usage: mbuild <script | lang>'
  fi

  LANG=$2

  declare -a languages
  declare -x stringlang

  # create languages array and string
  while IFS= read -r language; do
    language=${language##*/}
    languages+=(language)
    stringlang+="${language}, "
  done < <( find $ROOT_DIR/notes -mindepth 1 -maxdepth 1 -type d | sort)

  # simple lang checks
  case "$LANG" in
    ??  ) LANG="${LANG,,}" ;;
    ## remove final comma from $stringlang
    ""  ) echo "mbuild: usage: mbuild lang <ar | en | he | ru>"
          echo please, choose from: ${stringlang%,*}
          exit 1 ;;
    *   ) echo "mbuild: usage: mbuild lang <ar | en | he | ru>"
          echo choose from: ${stringlang%,*}
          exit 1 ;;
  esac

  # check if choosen lang is in available languages
  if [[ -z `grep ${LANG} <<< $stringlang` ]]; then
    echo "lang not found"
    echo "mbuild: usage: mbuild lang <ar | en | he | ru>"
    echo "choose from: ${stringlang%,*}"
    exit 1
  fi

  SEARCH_FOLDER="$ROOT_DIR/notes/$LANG -mindepth 1"
  TEMPLATE="$ROOT_DIR/assets/note_${LANG}.html"
fi


# loop iterating over notes and adding them into notes array above
while IFS= read -r note; do

  # get note's first line which contains date
  ntitle=$( sed -n '1p' < "$note" )

  case "$note" in
    *$LANG/index.md  ) TEMPLATE="$ROOT_DIR/assets/index_$LANG.html"  ;;
    *404.md       ) ntitle=404     ;; 
  esac

  if [[ -n `grep index <<< $note` ]]; then
    ntitle=index
  fi

  dir_md=${note%/*.md}
  OUTPUT_DIR=${dir_md/notes/}

  # don't change location of the block below, if not neccessary
  # create dir if no exists
  if [[ ! -d $OUTPUT_DIR ]]; then
    mkdir -p "$OUTPUT_DIR"
  fi

  printf 'building: %s \n' "${note}"
  pandoc --mathjax \
       --template "${TEMPLATE}" \
       --metadata title="${ntitle}" \
       -o "$OUTPUT_DIR/${ntitle}.html" \
       "${note}"

done < <( find ${SEARCH_FOLDER} -iname '*.md' | sort -V )

# TODO: below doesn't work properly
#printf '%s pages built\n' "$(( ${#notes[@]} + 1 ))"
